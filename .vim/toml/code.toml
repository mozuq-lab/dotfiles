[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
merged = 0

[[plugins]]
repo = 'Shougo/neosnippet'
hook_add = '''
  imap <C-k>     <Plug>(neosnippet_expand_or_jump)
  smap <C-k>     <Plug>(neosnippet_expand_or_jump)
  xmap <C-k>     <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = 'neosnippet'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
  let g:tcomment_opleader1 = ',c'
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  " Start interactive EasyAlign in visual mode (e.g. vipga)
  xmap ga <Plug>(EasyAlign)
  " Start interactive EasyAlign for a motion/text object (e.g. gaip)
  nmap ga <Plug>(EasyAlign)"
'''

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = 'nmap <F8> :<C-u>TagbarToggle<CR>'

[[plugins]]
repo = 'vim-scripts/gtags.vim'
hook_add = '''
  nnoremap gc :<C-u>GtagsCursor<CR>
'''

[[plugins]]
repo = 'jsfaint/gen_tags.vim'
hook_add = '''
    " let g:gen_tags#gtags_auto_gen = 1
'''

[[plugins]]
repo = 'kana/vim-smartinput'
hook_add = '''
  call smartinput#map_to_trigger('i', '<Space>', '<Space>', '<Space>')
  call smartinput#define_rule({
              \   'at'    : '{\%#}',
              \   'char'  : '<Space>',
              \   'input' : '<Space><Space><Left>',
              \   })
  call smartinput#map_to_trigger('i', ';', ';', ';')
  call smartinput#define_rule({
              \   'at'    : '(\%#)',
              \   'char'  : ';',
              \   'input' : '<Right>;<Left><Left>',
              \   })
  call smartinput#map_to_trigger('i', '>', '>', '>')
  call smartinput#define_rule({
              \   'at'        : '>\%#',
              \   'char'      : '>',
              \   'input'     : '<BS>->',
              \   'filetype'  : ['php']
              \   })
  call smartinput#map_to_trigger('i', '>', '>', '>')
  call smartinput#define_rule({
              \   'at'    : '->\%#',
              \   'char'  : '>',
              \   'input' : '<BS><BS>=><Space>',
              \   'filetype'  : ['php']
              \   })
  call smartinput#map_to_trigger('i', '?', '?', '?')
  call smartinput#define_rule({
              \   'at'    : '<?\%#',
              \   'char'  : '?',
              \   'input' : '=<Space><Space>?><LEFT><LEFT><LEFT>',
              \   })
'''

[[plugins]]
repo = 'sgur/vim-editorconfig'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  nnoremap <Leader>q :QuickRun<CR>
  nnoremap <Leader>Q :QuickRun <=@+<CR>
  let g:quickrun_config = {
    \ 'python': {
    \   'command': 'python3'
    \ },
  \ }
'''

[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
  let g:user_emmet_leader_key = '<c-e>'
  let g:user_emmet_settings = {
  \   'html': {
  \       'lang': "ja"
  \   }
  \ }
'''

[[plugins]]
repo = 'captbaritone/better-indent-support-for-php-with-html'
on_ft = 'php'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'prettier/vim-prettier'
