[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'make -f make_mingw64.mak'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
lazy = 1
hook_add = '''
  nnoremap <silent> <Leader>R :<C-u>Denite -resume<CR>
  nnoremap <silent> <Leader>r :<C-u>Denite register<CR>
  nnoremap <silent> <Leader>b :<C-u>Denite buffer<CR>
  nnoremap <silent> <Leader>f :<C-u>Denite file/rec<CR>
  nnoremap <silent> <Leader>g :<C-u>Denite grep<CR>
'''

[[plugins]]
repo = 'roxma/nvim-yarp'
if = '!has("nvim")'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = '!has("nvim")'

hook_post_source = '''
  call denite#custom#map('normal', '<C-n>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('normal', '<C-p>', '<denite:move_to_previous_line>', 'noremap')
  call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>', 'noremap')
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
if = '! has("nvim")'
on_source = 'unite.vim'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  if has('win32') && (!has('gui_running') && !has('nvim'))
    let g:lightline = {'colorscheme': 'one'}
  else
    let g:lightline = {'colorscheme': 'default'}
  endif
  if has('nvim')
    let g:lightline.enable = {
    \   'statusline': 1,
    \   'tabline': 0
    \ }
  endif
'''

[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add = '''
  let g:yankround_dir=$HOME . '/.vim/yankround'
  nmap p <Plug>(yankround-p)
  nmap P <Plug>(yankround-P)
  nmap gp <Plug>(yankround-gp)
  nmap gP <Plug>(yankround-gP)
  nmap <C-p> <Plug>(yankround-prev)
  nmap <C-n> <Plug>(yankround-next)
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  let g:indent_guides_auto_colors = 0
  autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=#555555 ctermbg=2
  autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#666666 ctermbg=3
'''

[[plugins]]
repo = 'pepo-le/fcitx-mem-re'
if = 'has("unix")'

[[plugins]]
repo = 'pepo-le/win-ime-con.nvim'
if = 'has("win32")'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  nnoremap <silent> <Leader>e :<C-u>NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
  let g:nerdtree_tabs_startup_cd = 0
  let g:nerdtree_tabs_open_on_gui_startup = 0
  nmap <Leader>E <Plug>NERDTreeTabsToggle<CR>
'''

[[plugins]]
repo = 'thinca/vim-qfreplace'

#************************************************
# Session
#************************************************
[[plugins]]
repo = 'xolox/vim-misc'

[[plugins]]
repo = 'xolox/vim-session'
depends = 'vim-misc'
hook_add = '''
  let g:session_directory = '~/.vim/sessions'
  " 現在のディレクトリ直下の .vimsessions/ を取得
  let s:local_session_directory = xolox#misc#path#merge(getcwd(), '.vimsessions')
  " 存在すれば
  if isdirectory(s:local_session_directory)
    let g:session_directory = s:local_session_directory
    let g:session_autosave = 'yes'
    let g:session_autoload = 'yes'
    " 自動保存
    let g:session_autosave_periodic = 0
  else
    let g:session_autosave = 'no'
    let g:session_autoload = 'no'
  endif
  unlet s:local_session_directory
'''

#************************************************
# Coding
#************************************************
[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertEnter'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'Shougo/neosnippet'
hook_add = '''
  imap <C-k>     <Plug>(neosnippet_expand_or_jump)
  smap <C-k>     <Plug>(neosnippet_expand_or_jump)
  xmap <C-k>     <Plug>(neosnippet_expand_target)
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
depends = 'neosnippet'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tomtom/tcomment_vim'
hook_add = '''
  let g:tcomment_opleader1 = ',c'
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
  " Start interactive EasyAlign in visual mode (e.g. vipga)
  xmap ga <Plug>(EasyAlign)
  " Start interactive EasyAlign for a motion/text object (e.g. gaip)
  nmap ga <Plug>(EasyAlign)"
'''

[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = 'nmap <F8> :<C-u>TagbarToggle<CR>'

[[plugins]]
repo = 'vim-scripts/gtags.vim'
hook_add = '''
  nnoremap gc :<C-u>GtagsCursor<CR>
'''

[[plugins]]
repo = 'jsfaint/gen_tags.vim'
hook_add = '''
    " let g:gen_tags#gtags_auto_gen = 1
'''

[[plugins]]
repo = 'kana/vim-smartinput'
hook_add = '''
  call smartinput#map_to_trigger('i', '<Space>', '<Space>', '<Space>')
  call smartinput#define_rule({
              \   'at'    : '{\%#}',
              \   'char'  : '<Space>',
              \   'input' : '<Space><Space><Left>',
              \   })
  call smartinput#map_to_trigger('i', ';', ';', ';')
  call smartinput#define_rule({
              \   'at'    : '(\%#)',
              \   'char'  : ';',
              \   'input' : '<Right>;<Left><Left>',
              \   })
  call smartinput#map_to_trigger('i', '>', '>', '>')
  call smartinput#define_rule({
              \   'at'        : '>\%#',
              \   'char'      : '>',
              \   'input'     : '<BS>->',
              \   'filetype'  : ['php']
              \   })
  call smartinput#map_to_trigger('i', '>', '>', '>')
  call smartinput#define_rule({
              \   'at'    : '->\%#',
              \   'char'  : '>',
              \   'input' : '<BS><BS>=><Space>',
              \   'filetype'  : ['php']
              \   })
  call smartinput#map_to_trigger('i', '?', '?', '?')
  call smartinput#define_rule({
              \   'at'    : '<?\%#',
              \   'char'  : '?',
              \   'input' : '=<Space><Space>?><LEFT><LEFT><LEFT>',
              \   })
'''

[[plugins]]
repo = 'sgur/vim-editorconfig'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  nnoremap <Leader>q :QuickRun<CR>
'''

[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = '''
  let g:user_emmet_leader_key = '<c-e>'
  let g:user_emmet_settings = {
  \   'html': {
  \       'lang': "ja"
  \   }
  \ }
'''

[[plugins]]
repo = 'captbaritone/better-indent-support-for-php-with-html'
on_ft = 'php'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'
hook_add = '''
  autocmd FileType python setlocal omnifunc=jedi#completions
  let g:jedi#completions_enabled = 0
  let g:jedi#auto_vim_configuration = 0
'''

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = 'deoplete'
if = 'has("nvim")'
on_ft = 'python'

#************************************************
# Markdonw
#************************************************
[[plugins]]
repo = 'kannokanno/previm'
on_ft = 'markdown'
hook_add = '''
  augroup PrevimSettings
    autocmd!
    autocmd BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
  augroup END
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
on_ft = 'markdown'

#************************************************
# Syntax
#************************************************
[[plugins]]
repo = 'scrooloose/syntastic'
hook_add = '''
  let g:syntastic_mode_map = { 'mode': 'passive',
    \ 'active_filetypes': [''],
    \ 'passive_filetypes': [''] }
  let g:syntastic_always_populate_loc_list = 1
  let g:syntastic_auto_loc_list = 1
  let g:syntastic_check_on_open = 0
  let g:syntastic_auto_jump = 0
  let g:syntastic_check_on_wq = 0
  let g:syntastic_auto_loc_list = 1
  let g:syntastic_php_checkers = ['phpcs', 'phpmd']
  let g:syntastic_php_phpcs_args = '--standard=psr2'
  let g:syntastic_java_javac_args = '-J-Duser.language=en'
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:ale_lint_on_enter = 0
  let g:ale_linters = {
  \   'html': ['htmlhint'],
  \   'css': ['csslint'],
  \   'sass': ['sass_lint'],
  \   'javascript': ['eslint'],
  \   'typescript': ['eslint'],
  \   'go': ['govet', 'golint'],
  \   'php': ['php'],
  \   'python': ['pylint'],
  \   'java': ['javac'],
  \}
  let g:ale_python_pylint_options = '--rcfile ~/.pylintrc.d/alerc'
  let g:ale_java_javac_options = '-J-Duser.language=en'
'''

[[plugins]]
repo = 'sheerun/vim-polyglot'
hook_add = '''
  let g:polyglot_disabled = ['php']
'''

[[plugins]]
repo = 'nikvdp/ejs-syntax'
on_ft = 'ejs'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'

[[plugins]]
repo = 'vim-scripts/jQuery'

[[plugins]]
repo = 'Quramy/tsuquyomi'
on_ft = 'typescript'

#************************************************
# Git
#************************************************
[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'
